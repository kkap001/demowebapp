version: '3'
vars:
  DOPPLER_SECRET_ID: demo/dev/doppler
  DOPPLER_SECRET_KEY: DOPPLER_TOKEN
  CONTAINER_NAME: webtext-app-container
  IMAGE_NAME: webtext-app
  PORT: "8081"
  WEBTEXT_DEFAULT: "Development deploy"

tasks:
  build:
    desc: Build the webtext-app Docker image
    cmds:
      - docker build -t {{.IMAGE_NAME}} .

  lint:
    desc: Lint the Dockerfile using hadolint
    cmds:
      - docker run --rm -i hadolint/hadolint < Dockerfile

  deploy:
    desc: Deploy the latest webtext-app container locally
    cmds:
      - docker run -d --rm -p {{.PORT}}:80 -e WEBTEXT="{{.WEBTEXT_DEFAULT}}" --name {{.CONTAINER_NAME}} {{.IMAGE_NAME}}

  test:
    desc: Test if the deployment works
    cmds:
      - |
        for i in {1..5}; do
          RESPONSE=$(curl -s localhost:{{.PORT}}) && break
          echo "Retrying in 2 seconds..."
          sleep 2
        done
        echo "Response received: $RESPONSE"
        if [ "$RESPONSE" != "{{.WEBTEXT_DEFAULT}}" ]; then
          echo "Test failed: Unexpected response: $RESPONSE" >&2
          exit 1
        fi
        echo "Test passed: Expected response received"


  clean:
    desc: Stop and remove the container
    cmds:
      - docker stop {{.CONTAINER_NAME}} || true

  cicd:
    desc: Run build, lint, deploy, and test in sequence
    cmds:
      - task: build
      - task: lint
      - task: deploy
      - task: test

  deploywithdoppler:
    desc: Run the {{.CONTAINER_NAME}} container with Doppler
    cmds:
      - docker run -d --name {{.CONTAINER_NAME}} -p {{.PORT}}:80 -e WEBTEXT="{{.WEBTEXT}}" {{.IMAGE_NAME}}
    vars:
      doppler_token:
        sh: aws secretsmanager get-secret-value --secret-id "{{.DOPPLER_SECRET_ID}}" --query "SecretString" --region us-east-1 --output text | jq -r '.{{.DOPPLER_SECRET_KEY}}'
      WEBTEXT:
        sh: doppler secrets get WEBTEXT --config dev --plain --token {{.doppler_token}}